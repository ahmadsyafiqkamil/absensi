# Staging Caddyfile - similar to production but with staging-specific domains

{$FRONTEND_DOMAIN} {
    # Enable automatic HTTPS
    tls {
        protocols tls1.2 tls1.3
    }

    # Security headers (staging allows more for testing)
    header {
        # Security
        Strict-Transport-Security "max-age=86400; includeSubDomains"  # Shorter for staging
        X-Content-Type-Options "nosniff"
        X-Frame-Options "DENY"
        X-XSS-Protection "1; mode=block"
        Referrer-Policy "strict-origin-when-cross-origin"

        # Staging indicator
        X-Environment "staging"

        # Remove server information
        -Server
    }

    # Gzip compression
    encode gzip

    # Frontend proxy
    reverse_proxy frontend:3000 {
        # Health check
        health_uri /api/v2/auth/health/
        health_interval 30s
        health_timeout 10s

        # Timeout settings
        header_up Host {host}
        header_up X-Real-IP {remote}
        header_up X-Forwarded-For {remote}
        header_up X-Forwarded-Proto {scheme}
    }

    # Rate limiting (more lenient for staging)
    rate_limit {
        zone static {
            key {remote}
            window 1m
            events 200  # Higher limit for staging
        }
    }

    # Logging
    log {
        output file /var/log/caddy/frontend.log {
            roll_size 10mb
            roll_keep 5
        }
        format json
    }
}

{$API_DOMAIN} {
    # Enable automatic HTTPS
    tls {
        protocols tls1.2 tls1.3
    }

    # Security headers
    header {
        # Security
        Strict-Transport-Security "max-age=86400; includeSubDomains"
        X-Content-Type-Options "nosniff"
        X-Frame-Options "DENY"
        X-XSS-Protection "1; mode=block"
        Referrer-Policy "strict-origin-when-cross-origin"

        # Staging indicator
        X-Environment "staging"

        # CORS headers
        Access-Control-Allow-Origin "*"
        Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
        Access-Control-Allow-Headers "Authorization, Content-Type, X-CSRFToken"

        # Remove server information
        -Server
    }

    # Gzip compression
    encode gzip

    # Backend API proxy
    reverse_proxy backend:8000 {
        # Health check
        health_uri /health/
        health_interval 30s
        health_timeout 10s

        # Timeout settings
        header_up Host {host}
        header_up X-Real-IP {remote}
        header_up X-Forwarded-For {remote}
        header_up X-Forwarded-Proto {scheme}
        header_up X-Forwarded-Host {host}
    }

    # Rate limiting for API (more lenient for staging)
    rate_limit {
        zone api {
            key {remote}
            window 1m
            events 300  # Higher limit for staging
        }
    }

    # Logging
    log {
        output file /var/log/caddy/api.log {
            roll_size 10mb
            roll_keep 5
        }
        format json
    }
}

# Redirect www to non-www
www.{$FRONTEND_DOMAIN} {
    redir https://{FRONTEND_DOMAIN}{uri} permanent
}

www.{$API_DOMAIN} {
    redir https://{$API_DOMAIN}{uri} permanent
}
