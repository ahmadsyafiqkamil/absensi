version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: absensi_mysql_dev
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: absensi_db
      MYSQL_USER: absensi_user
      MYSQL_PASSWORD: absensi_password
    ports:
      - "3307:3306"
    volumes:
      - mysql_data_dev:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
      - ./mysql/migrations:/migrations
    networks:
      - absensi_network_dev
    command: --default-authentication-plugin=mysql_native_password

  # phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: absensi_phpmyadmin_dev
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: rootpassword
      MYSQL_ROOT_PASSWORD: rootpassword
    ports:
      - "8080:80"
    depends_on:
      - mysql
    networks:
      - absensi_network_dev

  # Backend DRF (Development)
  backend:
    build:
      context: ./drf
      dockerfile: Dockerfile
    container_name: absensi_backend_dev
    restart: unless-stopped
    environment:
      - DJANGO_DEBUG=1
      - DJANGO_SECRET_KEY=dev-secret-key-change-in-production
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,backend,absensi.localhost,api.absensi.localhost
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=absensi_db
      - MYSQL_USER=absensi_user
      - MYSQL_PASSWORD=absensi_password
      - CORS_ORIGIN_FRONTEND=http://localhost:3000,https://absensi.localhost,https://api.absensi.localhost
    ports:
      - "8000:8000"
    depends_on:
      - mysql
    networks:
      - absensi_network_dev
    volumes:
      - ./drf/app:/app
      - ./template:/app/template
    command: ["sh", "-c", "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"]

  # Frontend Next.js (Development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: absensi_frontend_dev
    restart: unless-stopped
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_BACKEND_URL=http://backend:8000
      - BACKEND_URL=http://backend:8000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - absensi_network_dev
    volumes:
      - ./frontend:/app
      - /app/node_modules

  # Reverse proxy for local HTTPS (self-signed via Caddy internal CA)
  caddy:
    image: caddy:2
    container_name: absensi_caddy_dev
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      - FRONTEND_DOMAIN_DEV=absensi.localhost
      - API_DOMAIN_DEV=api.absensi.localhost
    volumes:
      - ./Caddyfile.dev:/etc/caddy/Caddyfile:ro
      - caddy_data_dev:/data
      - caddy_config_dev:/config
    depends_on:
      - frontend
      - backend
    networks:
      - absensi_network_dev

volumes:
  mysql_data_dev:
    driver: local
  caddy_data_dev:
    driver: local
  caddy_config_dev:
    driver: local

networks:
  absensi_network_dev:
    driver: bridge
