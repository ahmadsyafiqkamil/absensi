# Generated by Django 5.0.2 on 2025-09-25 01:48

import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0030_fix_employee_cascade_deletion'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='attendance',
            name='check_in_ip',
            field=models.GenericIPAddressField(blank=True, null=True, verbose_name='Alamat IP Check-in'),
        ),
        migrations.AlterField(
            model_name='attendance',
            name='check_out_ip',
            field=models.GenericIPAddressField(blank=True, null=True, verbose_name='Alamat IP Check-out'),
        ),
        migrations.AlterField(
            model_name='attendance',
            name='overtime_amount',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Jumlah pembayaran lembur yang dihitung', max_digits=12, verbose_name='Jumlah Lembur'),
        ),
        migrations.AlterField(
            model_name='attendance',
            name='overtime_approved',
            field=models.BooleanField(default=False, help_text='Apakah lembur telah disetujui oleh supervisor', verbose_name='Lembur Disetujui'),
        ),
        migrations.AlterField(
            model_name='attendance',
            name='overtime_approved_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Lembur Disetujui Pada'),
        ),
        migrations.AlterField(
            model_name='attendance',
            name='overtime_approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_overtimes', to=settings.AUTH_USER_MODEL, verbose_name='Lembur Disetujui Oleh'),
        ),
        migrations.AlterField(
            model_name='attendance',
            name='overtime_minutes',
            field=models.PositiveIntegerField(default=0, help_text='Menit bekerja di luar jam kerja yang diperlukan', verbose_name='Menit Lembur'),
        ),
        migrations.AlterField(
            model_name='employee',
            name='fullname',
            field=models.TextField(blank=True, help_text='Nama lengkap pegawai', null=True, verbose_name='Nama Lengkap'),
        ),
        migrations.AlterField(
            model_name='position',
            name='approval_level',
            field=models.PositiveSmallIntegerField(choices=[(0, 'Tidak Ada Persetujuan'), (1, 'Level Divisi'), (2, 'Level Organisasi')], default=1, help_text='0 = Tidak ada izin persetujuan, 1 = Persetujuan level divisi, 2 = Persetujuan level organisasi (final)', verbose_name='Level Persetujuan'),
        ),
        migrations.AlterField(
            model_name='position',
            name='can_approve_overtime_org_wide',
            field=models.BooleanField(default=False, help_text='Jika benar, supervisor dengan posisi ini dapat menyetujui permintaan lembur dari semua divisi (persetujuan akhir)', verbose_name='Dapat Menyetujui Lembur Seluruh Organisasi'),
        ),
        migrations.AlterField(
            model_name='worksettings',
            name='earliest_check_in_enabled',
            field=models.BooleanField(default=True, help_text='Apakah akan menerapkan pembatasan waktu check-in terawal', verbose_name='Aktifkan Pembatasan Check-in Awal'),
        ),
        migrations.AlterField(
            model_name='worksettings',
            name='earliest_check_in_time',
            field=models.TimeField(default=datetime.time(6, 0), help_text='Waktu terawal pegawai dapat check-in (misalnya, 06:00)', verbose_name='Waktu Check-in Terawal'),
        ),
        migrations.AlterField(
            model_name='worksettings',
            name='friday_end_time',
            field=models.TimeField(default=datetime.time(13, 0), verbose_name='Waktu Selesai Jumat'),
        ),
        migrations.AlterField(
            model_name='worksettings',
            name='friday_grace_minutes',
            field=models.PositiveIntegerField(default=0, verbose_name='Menit Toleransi Jumat'),
        ),
        migrations.AlterField(
            model_name='worksettings',
            name='friday_required_minutes',
            field=models.PositiveIntegerField(default=240, verbose_name='Menit Wajib Jumat'),
        ),
        migrations.AlterField(
            model_name='worksettings',
            name='friday_start_time',
            field=models.TimeField(default=datetime.time(9, 0), verbose_name='Waktu Mulai Jumat'),
        ),
        migrations.AlterField(
            model_name='worksettings',
            name='latest_check_out_enabled',
            field=models.BooleanField(default=True, help_text='Apakah akan menerapkan pembatasan waktu check-out terakhir', verbose_name='Aktifkan Pembatasan Check-out Terakhir'),
        ),
        migrations.AlterField(
            model_name='worksettings',
            name='latest_check_out_time',
            field=models.TimeField(default=datetime.time(22, 0), help_text='Waktu terakhir pegawai dapat check-out (misalnya, 22:00)', verbose_name='Waktu Check-out Terakhir'),
        ),
        migrations.AlterField(
            model_name='worksettings',
            name='overtime_rate_holiday',
            field=models.DecimalField(decimal_places=2, default=0.75, help_text='Pengali gaji pokok per jam untuk lembur pada hari libur (misalnya, 0.75 = 3/4)', max_digits=5, verbose_name='Tarif Lembur (Hari Libur)'),
        ),
        migrations.AlterField(
            model_name='worksettings',
            name='overtime_rate_workday',
            field=models.DecimalField(decimal_places=2, default=0.5, help_text='Pengali gaji pokok per jam untuk lembur pada hari kerja (misalnya, 0.50 = 2/4)', max_digits=5, verbose_name='Tarif Lembur (Hari Kerja)'),
        ),
        migrations.AlterField(
            model_name='worksettings',
            name='overtime_threshold_minutes',
            field=models.PositiveIntegerField(default=60, help_text='Menit ekstra minimum sebelum lembur mulai dihitung (misalnya, 60 = buffer 1 jam)', verbose_name='Ambang Lembur (Menit)'),
        ),
    ]
