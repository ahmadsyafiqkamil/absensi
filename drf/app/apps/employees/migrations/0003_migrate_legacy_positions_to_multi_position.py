# Generated by Django 5.0.2 on 2025-09-17 08:32

from django.db import migrations
from datetime import date


def migrate_existing_positions(apps, schema_editor):
    """Migrate existing single positions to multi-position system"""
    Employee = apps.get_model('employees', 'Employee')
    EmployeePosition = apps.get_model('employees', 'EmployeePosition')
    
    # Get all employees with positions
    employees_with_positions = Employee.objects.filter(position__isnull=False)
    
    for employee in employees_with_positions:
        # Create EmployeePosition record for existing position
        EmployeePosition.objects.get_or_create(
            employee=employee,
            position=employee.position,
            defaults={
                'is_primary': True,  # Existing position becomes primary
                'is_active': True,
                'effective_from': employee.created_at.date() if employee.created_at else date.today(),
                'assignment_notes': 'Migrated from legacy single position system'
            }
        )


def reverse_migration(apps, schema_editor):
    """Reverse the migration by removing all EmployeePosition records"""
    EmployeePosition = apps.get_model('employees', 'EmployeePosition')
    EmployeePosition.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('employees', '0002_add_multi_position_support'),
    ]

    operations = [
        migrations.RunPython(migrate_existing_positions, reverse_migration),
    ]
